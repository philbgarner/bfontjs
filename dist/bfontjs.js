!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("canvas"),require("fs")):"function"==typeof define&&define.amd?define(["canvas","fs"],t):"object"==typeof exports?exports.bfontjs=t(require("canvas"),require("fs")):e.bfontjs=t(e.canvas,e.fs)}(self,((e,t)=>(()=>{"use strict";var r={517:t=>{t.exports=e},89:e=>{e.exports=t}},a={};function n(e){var t=a[e];if(void 0!==t)return t.exports;var o=a[e]={exports:{}};return r[e](o,o.exports,n),o.exports}n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var o={};return(()=>{n.r(o),n.d(o,{DrawText:()=>i,Generate437:()=>a,LoadFromFile:()=>f,LoadFromJSON:()=>c});var e=n(517),t=n(89);let r=null;function a(e){var r;(r=__dirname+"/fonts/Codepage-437.png",new Promise(((e,a)=>{try{let a=0,o=0,i=9,c=16,f={},s=(n=r,Buffer.from(t.readFileSync(n)).toString("base64"));for(let e=0;e<256;e++)f[String.fromCharCode(e)]={x:a,y:o,w:i,h:c},a+=i,a>=288&&(a=0,o+=c),o>=128&&(o=0);e({codepage:f,imagedata:s})}catch(e){a(e)}var n}))).then((r=>{t.writeFileSync(e,JSON.stringify(r))}))}function i(t,a,n,o,i,c){let f=a;if(!r)try{r=document.createElement("canvas")}catch{r=(0,e.createCanvas)(f,f)}let s=canvas.getContext("2d");s.clearRect(0,0,f,f);let d=0;for(let e in i){var l=a.codepage[i[e]];if(!l)return void console.log("Error finding value in codepage for",i[e],`(${i[e].charCodeAt(0)})`);s.drawImage(a.image,l.x,l.y,l.w,l.h,d,0,l.w,l.h),d+=l.w}var g,p=s.getImageData(0,0,d-l.w,l.h),u=p.data;let m=function(e){7===e.length?e+="ff":8===e.length&&(e+="0");var t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16),a:parseInt(t[4],16)}:null}(c);for(g=0;g<u.length;g+=4)u[g]>0&&(u[g]=m.r,u[g+1]=m.g,u[g+2]=m.b,u[g+3]=m.a);s.clearRect(0,0,f,f),s.putImageData(p,0,0),t.drawImage(canvas,0,0,i.length*l.w,l.h,n,o,i.length*l.w,l.h)}function c(t){return new Promise(((r,a)=>{try{"string"==typeof t&&(t=JSON.parse(t)),t.image=new e.Image,t.image.src="data:image/png;base64,"+t.imagedata,r(t)}catch(e){a(e)}}))}function f(e){return new Promise(((r,a)=>{try{c(t.readFileSync(e)).then((e=>{r(e)}))}catch(e){a(e)}}))}})(),o})()));